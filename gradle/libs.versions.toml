[versions]
agp = "8.9.2"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
kotlin = "2.2.0"
compose-material3 = "1.3.2"
androidx-activityCompose = "1.10.1"
kotlinStdlib = "2.2.0"
runner = "1.5.2"
core = "1.5.0"
junit = "1.2.1"
koin-bom = "4.1.0"
roomKtx = "2.7.2"
gson = "2.13.1"
ksp = "2.1.21-2.0.2"
ktor = "3.1.3"
composeBom = "2025.06.01"
composeComponents = "1.9.0-beta01"
androidx-lifecycle = "2.9.1"
navigationCompose = "2.9.1"
coilCompose = "3.2.0"
mokko = "0.23.0"
coreKtx = "1.16.0"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
compose-resources = { group = "org.jetbrains.compose.components", name = "components-resources", version.ref = "composeComponents" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koin-bom" }
koin-test = { module = "io.insert-koin:koin-test" }
koin-core = { module = "io.insert-koin:koin-core" }
koin-android = { module = "io.insert-koin:koin-android" }
koin-compose = { module = "io.insert-koin:koin-compose" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel" }

room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomKtx" }
room-gradle = { module = "androidx.room:room-gradle-plugin", version.ref = "roomKtx" }

coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coilCompose" }
coil-network  = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coilCompose" }
mokko = { module = "dev.icerock.moko:resources", version.ref = "mokko" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
mokko-resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "mokko" }
